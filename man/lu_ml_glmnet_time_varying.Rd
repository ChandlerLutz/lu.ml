% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lu_ml_glmnet_time_varying.R
\name{lu_ml_glmnet_time_varying}
\alias{lu_ml_glmnet_time_varying}
\title{Time-Varying GLMNet Model for Land Use and House Price Prediction}
\usage{
lu_ml_glmnet_time_varying(
  DT.hp,
  DT.lu,
  repeats = 5,
  folds = 5,
  compute.lu.ml.parts = FALSE,
  penalty.type = c("ridge", "lasso", "elasticnet"),
  seed = 12
)
}
\arguments{
\item{DT.hp}{A \code{data.table} containing house price data with columns \code{GEOID},
\code{index} (Date), and \code{hp.target} (house price target variable).}

\item{DT.lu}{A \code{data.table} containing land use data with \code{GEOID} as the first
column and other columns representing land use features.}

\item{repeats}{An integer specifying the number of times to repeat the k-fold
cross-validation. Defaults to 5.}

\item{folds}{An integer specifying the number of folds for cross-validation.
Defaults to 5.}

\item{compute.lu.ml.parts}{A logical value indicating whether to compute
predictions for specific land use components. Defaults to FALSE.}

\item{penalty.type}{A character string indicating which penalized regression model
to use. Options are \code{"ridge"} (alpha = 0), \code{"lasso"} (alpha = 1), or \code{"elasticnet"}.
If \code{"elasticnet"} is chosen, the function performs a grid search over \code{alpha}
in \code{seq(0.1, 0.9, 0.1)} and selects the best alpha based on cross-validated MSE.}

\item{seed}{An integer seed for reproducibility of random sampling and cross-validation
folds. Defaults to 1234.}
}
\value{
A \code{data.table} containing the original house price data (\code{DT.hp}) merged
with out-of-sample predictions from the fitted penalized regression model. If
\code{compute.lu.ml.parts} is TRUE, additional columns are included with predictions
based on specific land use components:
\itemize{
\item \code{lu_ml_parts} (slope, water, wetlands)
\item \code{lu_ml_total} (total land unavailability measures)
\item \code{lu_ml_slope}, \code{lu_ml_water}, \code{lu_ml_wetlands} (individual parts)
}
}
\description{
This function trains a penalized regression model (Ridge, Lasso, or Elastic Net)
using \code{glmnet} to predict house prices from time-varying land use data.
It performs repeated k-fold cross-validation to assess model performance
and can optionally compute predictions based on specific land use components
(parts, total, slope, water, wetlands).
}
\details{
The function performs the following steps:
\enumerate{
\item Orders house price and land use data by GEOID and index.
\item Ensures the data has consistent GEOIDs and no missing values in the target.
\item Removes \code{saiz.circle} variables from the land use data.
\item Sets up repeated k-fold cross-validation across GEOIDs.
\item For each time index, trains a GLMNet model on the training folds and
predicts on the test folds. If \code{penalty.type = "elasticnet"}, alpha is
chosen via cross-validation across a grid.
\item Optionally computes predictions using subsets of land use features.
\item Aggregates out-of-sample predictions and merges them back with \code{DT.hp}.
}

All parallel computation is managed via the \code{future} and \code{future.apply} packages.
Parallelization occurs at the cross-validation level (folds × repeats × time index).
}
\examples{
\dontrun{
library(data.table)

# Load house price and land use data
data(dt_mian_sufi_2014)
data(dt_cnty_lu_2010)

dt_mian_sufi_2014 <- dt_mian_sufi_2014[
  , .(GEOID = fips, index = as.Date("2002-01-01"),
      hp.target = house.net.worth)][!is.na(hp.target)]

dt_cnty_lu_2010 <- dt_cnty_lu_2010[
  , .(GEOID, unavailable = .SD),
  .SDcols = grep("unavailable", names(dt_cnty_lu_2010), value = TRUE)]

# Run the model using Ridge regression
out <- lu_ml_glmnet_time_varying(
  DT.hp = dt_mian_sufi_2014,
  DT.lu = dt_cnty_lu_2010,
  penalty.type = "ridge",
  seed = 42
)

# Correlation between predicted and actual house prices
cor(out$hp.target, out$lu_ml)
}

}
